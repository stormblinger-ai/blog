import{_ as a,c as s,o as t,a5 as e}from"./chunks/framework.BthLuVtL.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python-db/Python 操作 MySQL.md","filePath":"Python-db/Python 操作 MySQL.md"}'),p={name:"Python-db/Python 操作 MySQL.md"},l=e('<p>本章节Python 操作 MySQL 数据库需要是使用到 PyMySQL 驱动</p><ul><li><p>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2 中则使用 mysqldb。</p></li><li><p>PyMySQL 遵循 Python 数据库 API v2.0 规范，并包含了 pure-Python MySQL 客户端库。</p></li></ul><p>Python 操作 MySQL 前提是要安装好 MySQL 数据库并能正常连接使用，安装步骤详见下文。</p><h2 id="操作流程" tabindex="-1">操作流程 <a class="header-anchor" href="#操作流程" aria-label="Permalink to &quot;操作流程&quot;">​</a></h2><ol><li><p>安装 MySQL 数据库</p></li><li><p>pymysql 模块安装与使用</p></li><li><p>获取数据库的连接</p></li><li><p>执行 sql 语句或存储过程</p></li><li><p>关闭数据库连接</p></li></ol><h3 id="安装-mysql-数据库" tabindex="-1">安装 MySQL 数据库 <a class="header-anchor" href="#安装-mysql-数据库" aria-label="Permalink to &quot;安装 MySQL 数据库&quot;">​</a></h3><p><strong>注意：</strong>  安装过程我们需要通过开启管理员权限来安装，否则会由于权限不足导致无法安装。</p><h3 id="一、linux-上安装-mysql" tabindex="-1">一、Linux 上安装 MySQL <a class="header-anchor" href="#一、linux-上安装-mysql" aria-label="Permalink to &quot;一、Linux 上安装 MySQL&quot;">​</a></h3><h4 id="_1、检测系统是否自带安装-mysql" tabindex="-1">1、检测系统是否自带安装 MySQL: <a class="header-anchor" href="#_1、检测系统是否自带安装-mysql" aria-label="Permalink to &quot;1、检测系统是否自带安装 MySQL:&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rpm -qa | grep mysql</span></span></code></pre></div><h4 id="_2、如果查看到系统有安装-mysql-那可以选择进行卸载" tabindex="-1">2、如果查看到系统有安装 MySQL，那可以选择进行卸载: <a class="header-anchor" href="#_2、如果查看到系统有安装-mysql-那可以选择进行卸载" aria-label="Permalink to &quot;2、如果查看到系统有安装 MySQL，那可以选择进行卸载:&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rpm -e mysql…　　# 普通删除模式</span></span></code></pre></div><h4 id="_3、安装-mysql" tabindex="-1">3、安装 MySQL <a class="header-anchor" href="#_3、安装-mysql" aria-label="Permalink to &quot;3、安装 MySQL&quot;">​</a></h4><p>首先需要先下载 MySQL 安装包，官网下载地址下载对应版本即可,或直接在网上拉取并安装：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm # 获取安装包</span></span></code></pre></div><p><strong>权限设置：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chown mysql:mysql -R /var/lib/mysql</span></span></code></pre></div><p><strong>初始化 MySQL：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysqld --initialize</span></span></code></pre></div><p><strong>启动 MySQL：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>systemctl start mysqld</span></span></code></pre></div><p><strong>查看 MySQL 运行状态：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>systemctl status mysqld</span></span></code></pre></div><h4 id="_4、修改默认密码" tabindex="-1">4、修改默认密码 <a class="header-anchor" href="#_4、修改默认密码" aria-label="Permalink to &quot;4、修改默认密码&quot;">​</a></h4><p>Mysql安装成功后，默认的root用户密码为空，你可以使用以下命令来创建root用户的密码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysqladmin -u root password &quot;new_password&quot;;</span></span></code></pre></div><p><strong>登陆：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql -uroot -p&#39;new_password&#39;</span></span></code></pre></div><h3 id="二、windows-上安装" tabindex="-1">二、Windows 上安装 <a class="header-anchor" href="#二、windows-上安装" aria-label="Permalink to &quot;二、Windows 上安装&quot;">​</a></h3><h4 id="_1、下载" tabindex="-1">1、下载 <a class="header-anchor" href="#_1、下载" aria-label="Permalink to &quot;1、下载&quot;">​</a></h4><p>Windows 上安装 MySQL 相对来说会较为简单，5.7 版本下载地址</p><p>下载完后，将 zip 包解压到自定义目录，这里我将解压后的文件夹放在 D:\\Software\\MySQL\\mysql-5.7.28 下;</p><h4 id="_2、配置" tabindex="-1">2、配置 <a class="header-anchor" href="#_2、配置" aria-label="Permalink to &quot;2、配置&quot;">​</a></h4><p>接下来需要配置下 MySQL 的配置文件，打开刚刚解压的文件夹 D:\\Software\\MySQL\\mysql-5.7.28 ，在该文件夹下创建 my.ini 配置文件，编辑 my.ini 配置以下基本信息：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[client]</span></span></code></pre></div><p><strong>注意</strong>：还需要创建数据库数据目录，初始化数据库的时候需要初始化数据目录 在 Mysql 安装目录下创建数据目录 <code>datadir=D:\\\\Software\\\\MySQL\\\\SqlData</code></p><h4 id="_3、启动数据库" tabindex="-1">3、启动数据库 <a class="header-anchor" href="#_3、启动数据库" aria-label="Permalink to &quot;3、启动数据库&quot;">​</a></h4><p>以管理员身份打开 cmd 命令行工具，切换至 Mysql 安装目录：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd D:\\Software\\MySQL\\mysql-5.7.28\\bin</span></span></code></pre></div><p><strong>初始化数据库：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysqld --initialize --console</span></span></code></pre></div><p>执行完成后，会输出 root 用户的初始默认密码，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>A temporary password is generated for root@localhost: feKm1E/-ExWM</span></span></code></pre></div><p>&quot;feKm1E/-ExWM&quot; 即为 Mysql 初始密码</p><p><strong>输入以下安装命令：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysqld install</span></span></code></pre></div><p><strong>初始化数据目录</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysqld --initialize-insecure</span></span></code></pre></div><p><strong>启动 Mysql：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>net start mysql</span></span></code></pre></div><p><strong>登陆：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql -uroot -p</span></span></code></pre></div><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>Mysql 登陆图</p><p>刚安装好的数据库 默认密码是空，可根据自身需要修改。</p><p><strong>windows 下修改 mysql 密码：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; select User from user;</span></span></code></pre></div><h3 id="三、创建数据库" tabindex="-1">三、创建数据库 <a class="header-anchor" href="#三、创建数据库" aria-label="Permalink to &quot;三、创建数据库&quot;">​</a></h3><p><strong>创建数据库：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>create database test_db;</span></span></code></pre></div><p><strong>查看数据库：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; show databases;</span></span></code></pre></div><h2 id="pymysql-模块安装与数据库-curd" tabindex="-1">pymysql 模块安装与数据库 CURD <a class="header-anchor" href="#pymysql-模块安装与数据库-curd" aria-label="Permalink to &quot;pymysql 模块安装与数据库 CURD&quot;">​</a></h2><h3 id="一、安装" tabindex="-1">一、安装 <a class="header-anchor" href="#一、安装" aria-label="Permalink to &quot;一、安装&quot;">​</a></h3><p>PyMySQL 模块使用 pip命令进行安装：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip3 install PyMySQL</span></span></code></pre></div><p>假如系统不支持 pip 命令，可以使用以下方式安装：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$ git clone https://github.com/PyMySQL/PyMySQL</span></span></code></pre></div><h3 id="二、pymysql-连接数据库" tabindex="-1">二、pymysql 连接数据库 <a class="header-anchor" href="#二、pymysql-连接数据库" aria-label="Permalink to &quot;二、pymysql 连接数据库&quot;">​</a></h3><p><strong>pymysql .connect 函数：连接上数据库</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>输出结果显示如下：表面数据库连接成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;pymysql.connections.Connection object at 0x00000000022A54A8&gt;</span></span></code></pre></div><p><strong>使用 pymysql 的 connect() 方法连接数据库，connect  参数解释如下：</strong></p><ul><li><p>host：MySQL服务的地址，若数据库在本地上，使用 localhost 或者127.0.0.1。如果在其它的服务器上，则写对应的 IP地址</p></li><li><p>port：服务的端口号，默认为3306，不写则为默认值。</p></li><li><p>user：登录数据库的用户名</p></li><li><p>passwd：登录 MySQL 的密码</p></li><li><p>db：数据库名</p></li><li><p>charset：设置为 utf8 编码，解决存汉字乱码问题</p></li></ul><p><strong>conn.cursor():获取游标</strong></p><p>如果要操作数据库，光连接数据是不够的，咱们必须拿到操作数据库的游标，才能进行后续的操作，游标的主要作用是用来接收数据库操作后的返回结果，比如读取数据、添加数据。通过获取到的数据库连接实例 conn 下的 cursor() 方法来创建游标，实例如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>输出结果为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;pymysql.cursors.Cursor object at 0x000000000A544B00&gt;</span></span></code></pre></div><p>cursor 返回一个游标实例对象，其中包含了很多操作数据的方法，如执行sql语句，sql 执行命令：<code>execute()</code>和<code>executemany()</code></p><p><strong>execute(query,args=None):</strong></p><ul><li><p>函数作用：执行单条的sql语句，执行成功后返回受影响的行数</p></li><li><p>参数说明：</p></li><li><p>query：要执行的sql语句，字符串类型</p></li><li><p>args：可选的序列或映射，用于query的参数值。如果args为序列，query中必须使用%s做占位符；如果args为映射，query中必须使用%(key)s做占位符</p></li></ul><p><strong>executemany(query,args=None)：</strong></p><ul><li><p>函数作用：批量执行sql语句，比如批量插入数据，执行成功后返回受影响的行数</p></li><li><p>参数说明：</p></li><li><p>query：要执行的sql语句，字符串类型</p></li><li><p>args：嵌套的序列或映射，用于query的参数值</p></li></ul><p><strong>其他游标对象如下表：</strong></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>close()</td><td>关闭游标，之后游标不可用</td></tr><tr><td>fetchone()</td><td>返回一条查询结果</td></tr><tr><td>fetchall()</td><td>返回所有查询结果</td></tr><tr><td>fetchmany([size])</td><td>返回size条查询结果</td></tr><tr><td>nextset()</td><td>移动到下一条结果</td></tr><tr><td>scroll(value,mode=&#39;relative&#39;)</td><td>移动游标到指定行，如果mode=&#39;relative&#39;，则表示从当前行移动value条，如果mode=‘absolute’，则表示从结果集的第一行移动value条</td></tr></tbody></table><p><strong>完整数据库连接操作实例如下：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p><strong>以上结果输出为：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Database version : 5.7.28</span></span></code></pre></div><h3 id="三、创建表" tabindex="-1">三、创建表 <a class="header-anchor" href="#三、创建表" aria-label="Permalink to &quot;三、创建表&quot;">​</a></h3><p>创建表代码如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import pymysql</span></span></code></pre></div><p>如下所示数据库表创建成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; desc user1;</span></span></code></pre></div><h3 id="三、插入数据" tabindex="-1">三、插入数据 <a class="header-anchor" href="#三、插入数据" aria-label="Permalink to &quot;三、插入数据&quot;">​</a></h3><p>插入数据实现代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import pymysql</span></span></code></pre></div><p><strong>插入数据结果：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; select * from user1;</span></span></code></pre></div><h3 id="四、查询数据" tabindex="-1">四、查询数据 <a class="header-anchor" href="#四、查询数据" aria-label="Permalink to &quot;四、查询数据&quot;">​</a></h3><p>Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p><ul><li><p>fetchone(): 该方法获取下一个查询结果集。结果集是一个对象</p></li><li><p>fetchall(): 接收全部的返回结果行.</p></li><li><p>rowcount: 这是一个只读属性，并返回执行 execute()方法后影响的行数。</p></li></ul><p><strong>查询数据代码如下：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import pymysql</span></span></code></pre></div><p><strong>输出结果：</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>fname=Fei,lname=Fei,age=20,sex=M,income=1000.0</span></span></code></pre></div><h3 id="五、数据库表更新操作" tabindex="-1">五、数据库表更新操作 <a class="header-anchor" href="#五、数据库表更新操作" aria-label="Permalink to &quot;五、数据库表更新操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><h3 id="六、删除操作" tabindex="-1">六、删除操作 <a class="header-anchor" href="#六、删除操作" aria-label="Permalink to &quot;六、删除操作&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><h3 id="七、错误处理" tabindex="-1">七、错误处理 <a class="header-anchor" href="#七、错误处理" aria-label="Permalink to &quot;七、错误处理&quot;">​</a></h3><p>DB API中定义了一些数据库操作的错误及异常，下表列出了这些错误和异常:</p><table><thead><tr><th>异 常</th><th>描 述</th></tr></thead><tbody><tr><td>Warning</td><td>当有严重警告时触发，例如插入数据是被截断等等。必须是 StandardError 的子类。</td></tr><tr><td>Error</td><td>警告以外所有其他错误类。必须是 StandardError 的子类。</td></tr><tr><td>InterfaceError</td><td>当有数据库接口模块本身的错误（而不是数据库的错误）发生时触发。必须是Error的子类。</td></tr><tr><td>DatabaseError</td><td>和数据库有关的错误发生时触发。必须是Error的子类。</td></tr><tr><td>DataError</td><td>当有数据处理时的错误发生时触发，例如：除零错误，数据超范围等等。必须是DatabaseError的子类。</td></tr><tr><td>OperationalError</td><td>指非用户控制的，而是操作数据库时发生的错误。例如：连接意外断开、 数据库名未找到、事务处理失败、内存分配错误等等操作数据库是发生的错误。必须是DatabaseError的子类。</td></tr><tr><td>IntegrityError</td><td>完整性相关的错误，例如外键检查失败等。必须是DatabaseError子类。</td></tr><tr><td>InternalError</td><td>数据库的内部错误，例如游标（cursor）失效了、事务同步失败等等。必须是DatabaseError子类。</td></tr><tr><td>ProgrammingError</td><td>程序错误，例如数据表（table）没找到或已存在、SQL语句语法错误、 参数数量错误等等。必须是DatabaseError的子类。</td></tr><tr><td>NotSupportedError</td><td>不支持错误，指使用了数据库不支持的函数或API等。例如在连接对象上 使用.rollback()函数，然而数据库并不支持事务或者事务已关闭。必须是DatabaseError的子类。</td></tr></tbody></table><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>本文给大家介绍 Python 如何连接 Mysql 进行数据的增删改查操作，文章通过简介的代码方式进行示例演示，给需要使用 Python 操作 Mysql 的工程师提供支撑。</p><h3 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h3><p>[1]<a href="https://www.runoob.com/mysql/mysql-install.html" target="_blank" rel="noreferrer">https://www.runoob.com/mysql/mysql-install.html</a> [2]<a href="https://www.runoob.com/python3/python3-mysql.html" target="_blank" rel="noreferrer">https://www.runoob.com/python3/python3-mysql.html</a></p><blockquote><p>文中示例代码：<a href="https://github.com/JustDoPython/python-100-day" target="_blank" rel="noreferrer">https://github.com/JustDoPython/python-100-day</a></p></blockquote>',120),i=[l];function n(o,r,d,c,h,g){return t(),s("div",null,i)}const b=a(p,[["render",n]]);export{y as __pageData,b as default};
