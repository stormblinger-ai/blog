import{_ as t,c as e,o as a,a5 as i}from"./chunks/framework.BthLuVtL.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Python-db/SQLite.md","filePath":"Python-db/SQLite.md"}'),r={name:"Python-db/SQLite.md"},s=i('<p>1 简介</p><p>SQLite 是一种轻型嵌入式关系型数据库，它包含在一个相对小的 C 库中。SQLite 占用资源低，处理速度快，它支持 Windows、Linux、Unix 等多种主流操作系统，支持 Python、Java、C# 等多种语言，目前的版本已经发展到了 SQLite3。</p><p>SQLite 是一个进程内的库，它实现了自给自足、无服务器、无需配置、支持事务。Python 可以通过 sqlite3 模块与 SQLite3 集成，Python 2.5.x 以上版本内置了 sqlite3 模块，因此，我们在 Python 中可以直接使用 SQLite。</p><h2 id="_2-sqlite-数据类型" tabindex="-1">2 SQLite 数据类型 <a class="header-anchor" href="#_2-sqlite-数据类型" aria-label="Permalink to &quot;2 SQLite 数据类型&quot;">​</a></h2><p>在介绍使用之前，我们先了解下 SQLite 数据类型。SQLite 采用动态数据类型，也就是说数据的类型取决于数据本身。</p><h3 id="_2-1-存储类型" tabindex="-1">2.1 存储类型 <a class="header-anchor" href="#_2-1-存储类型" aria-label="Permalink to &quot;2.1 存储类型&quot;">​</a></h3><p>存储类型就是数据保存成文件后的表现形式，存储类型有 5 种，如下所示：</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>NULL</td><td>空值</td></tr><tr><td>INTEGER</td><td>有符号的整数类型</td></tr><tr><td>REAL</td><td>浮点数类型</td></tr><tr><td>TEXT</td><td>字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储</td></tr><tr><td>BLOB</td><td>二进制表示</td></tr></tbody></table><h3 id="_2-2-亲和类型" tabindex="-1">2.2 亲和类型 <a class="header-anchor" href="#_2-2-亲和类型" aria-label="Permalink to &quot;2.2 亲和类型&quot;">​</a></h3><p>亲和类型简单来说就是数据表列的数据对应存储类型的倾向性，当数据插入时，字段的数据将会优先采用亲缘类型作为值的存储方式，同样有 5 种，如下所示：</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>NONE</td><td>不做任何转换，直接以该数据所属的数据类型进行存储</td></tr><tr><td>NUMERIC</td><td>该列可以包含使用所有五个存储类型的值</td></tr><tr><td>INTEGER</td><td>类似于 NUMERIC，区别是在执行 CAST 表达式时</td></tr><tr><td>TEXT</td><td>该列使用存储类型 NULL、TEXT 或 BLOB 存储数据</td></tr><tr><td>REAL</td><td>类似于 NUMERIC，区别是它会强制把整数值转换为浮点类型</td></tr></tbody></table><h3 id="_2-3-声明类型" tabindex="-1">2.3 声明类型 <a class="header-anchor" href="#_2-3-声明类型" aria-label="Permalink to &quot;2.3 声明类型&quot;">​</a></h3><p>声明类型也就是我们写 SQL 时字段定义的类型，我们看一下常用的声明类型与亲和类型的对应关系。</p><table><thead><tr><th>声明类型</th><th>亲和类型</th></tr></thead><tbody><tr><td>INT/INTEGER/TINYINT/BIGINT</td><td>INTEGER</td></tr><tr><td>VARCHAR/TEXT/CLOB</td><td>TEXT</td></tr><tr><td>BLOB</td><td>NONE</td></tr><tr><td>DOUBLE/FLOAT</td><td>REAL</td></tr><tr><td>DECIMAL/BOOLEAN/DATE/DATETIME</td><td>NUMERIC</td></tr></tbody></table><h2 id="_3-sqlite-常用函数" tabindex="-1">3 SQLite 常用函数 <a class="header-anchor" href="#_3-sqlite-常用函数" aria-label="Permalink to &quot;3 SQLite 常用函数&quot;">​</a></h2><p>SQLite 提供了一些内置函数，也就是我们可以直接使用的函数，下面来看一下。</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>COUNT</td><td>计算一个数据库表中的行数</td></tr><tr><td>MAX</td><td>某列的最大值</td></tr><tr><td>MIN</td><td>某列的最小值</td></tr><tr><td>AVG</td><td>某列的平均值</td></tr><tr><td>SUM</td><td>某列的和</td></tr><tr><td>RANDOM</td><td>返回一个介于 -9223372036854775808 和 +9223372036854775807 之间的随机整数</td></tr><tr><td>ABS</td><td>返回数值参数的绝对值</td></tr><tr><td>UPPER</td><td>把字符串转换为大写字母</td></tr><tr><td>LOWER</td><td>把字符串转换为小写字母</td></tr><tr><td>LENGTH</td><td>返回字符串的长度</td></tr><tr><td>sqlite_version</td><td>返回 SQLite 库的版本</td></tr></tbody></table><p>使用示例如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SELECT COUNT(*) FROM table;</span></span></code></pre></div><h2 id="_4-基本使用" tabindex="-1">4 基本使用 <a class="header-anchor" href="#_4-基本使用" aria-label="Permalink to &quot;4 基本使用&quot;">​</a></h2><h3 id="_4-1-连接数据库" tabindex="-1">4.1 连接数据库 <a class="header-anchor" href="#_4-1-连接数据库" aria-label="Permalink to &quot;4.1 连接数据库&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>如果数据库不存在，则会自动被创建。</p><h3 id="_4-2-游标" tabindex="-1">4.2 游标 <a class="header-anchor" href="#_4-2-游标" aria-label="Permalink to &quot;4.2 游标&quot;">​</a></h3><p>连接数据库后，我们需要使用游标进行相应 SQL 操作，游标创建如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 创建游标</span></span></code></pre></div><h3 id="_4-3-创建表" tabindex="-1">4.3 创建表 <a class="header-anchor" href="#_4-3-创建表" aria-label="Permalink to &quot;4.3 创建表&quot;">​</a></h3><p>我们在 test.db 库中新建一张表 student，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 创建表</span></span></code></pre></div><p>表创建好后，我们可以使用图形化工具 SQLiteStudio 直观的查看一下，官方下载地址：<a href="https://sqlitestudio.pl/index.rvt?act=download%EF%BC%8C%E6%89%93%E5%BC%80%E5%A6%82%E5%9B%BE%E6%89%80%E7%A4%BA%EF%BC%9A" target="_blank" rel="noreferrer">https://sqlitestudio.pl/index.rvt?act=download，打开如图所示：</a></p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>以 Windows 系统为例，选择免安装版 portable 进行下载，下载好后解压文件，直接运行文件夹中的 SQLiteStudio.exe 即可，打开后如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>我们先点击上方工具栏上的 Database 按钮，然后选 Add a database，如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>接着点击文件下方右侧的绿色加号按钮或文件夹按钮，选择数据库文件，比如我们选择 test.db 文件，选好了后点击测试连接，如果能够正常连接，我们就点击 OK 按钮添加数据库。</p><p>添加完数据库后，再点击 SQLiteStudio 主界面上方工具栏中 View 按钮，接着选数据库，结果如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>接着双击 test 库，结果如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>此时已经看到 student 表了，双击 student 表，我们还可以查看表的更多信息，如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><h3 id="_4-4-新增" tabindex="-1">4.4 新增 <a class="header-anchor" href="#_4-4-新增" aria-label="Permalink to &quot;4.4 新增&quot;">​</a></h3><p>我们向 student 表中插入两条数据，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cs.execute(&quot;INSERT INTO student (id, name) VALUES (&#39;1&#39;, &#39;Jhon&#39;)&quot;)</span></span></code></pre></div><p>执行完后，到 SQLiteStudio 中看一下，如图所示：</p><p>![图片](data:image/svg+xml,%3C%3Fxml version=&#39;1.0&#39; encoding=&#39;UTF-8&#39;%3F%3E%3Csvg width=&#39;1px&#39; height=&#39;1px&#39; viewBox=&#39;0 0 1 1&#39; version=&#39;1.1&#39; xmlns=&#39;<a href="http://www.w3.org/2000/svg" target="_blank" rel="noreferrer">http://www.w3.org/2000/svg</a>&#39; xmlns:xlink=&#39;<a href="http://www.w3.org/1999/xlink" target="_blank" rel="noreferrer">http://www.w3.org/1999/xlink</a>&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg stroke=&#39;none&#39; stroke-width=&#39;1&#39; fill=&#39;none&#39; fill-rule=&#39;evenodd&#39; fill-opacity=&#39;0&#39;%3E%3Cg transform=&#39;translate(-249.000000, -126.000000)&#39; fill=&#39;%23FFFFFF&#39;%3E%3Crect x=&#39;249&#39; y=&#39;126&#39; width=&#39;1&#39; height=&#39;1&#39;%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)</p><p>我们看到数据已经进来了。</p><h3 id="_4-5-查询" tabindex="-1">4.5 查询 <a class="header-anchor" href="#_4-5-查询" aria-label="Permalink to &quot;4.5 查询&quot;">​</a></h3><p>前面我们是通过 SQLiteStudio 查看数据的，现在我们通过 SQL 查看一下，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>输出结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>fetchone--&gt; (&#39;1&#39;, &#39;Jhon&#39;)</span></span></code></pre></div><h3 id="_4-6-更新" tabindex="-1">4.6 更新 <a class="header-anchor" href="#_4-6-更新" aria-label="Permalink to &quot;4.6 更新&quot;">​</a></h3><p>我们修改 id 为 1 这条数据的 name 值，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>输出结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>修改前--&gt; [(&#39;1&#39;, &#39;Jhon&#39;)]</span></span></code></pre></div><h3 id="_4-7-删除" tabindex="-1">4.7 删除 <a class="header-anchor" href="#_4-7-删除" aria-label="Permalink to &quot;4.7 删除&quot;">​</a></h3><p>我们删除 id 为 1 这条数据，如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 导入模块</span></span></code></pre></div><p>输出结果：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>删除前--&gt; [(&#39;2&#39;, &#39;Alan&#39;), (&#39;1&#39;, &#39;Jhon&#39;)]</span></span></code></pre></div><p>这里我们只介绍了增删改查基本操作，SQLite 的 SQL 操作与我们常用的 MySQL 等数据库基本类似。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文介绍了 SQLite 及通过 Python 操作 SQLite，对 Python 工程师使用 SQLite 提供了基本支撑。</p><blockquote><p>示例代码：Python-100-days-day080</p></blockquote><p>参考：</p><p>[1]<a href="https://baike.baidu.com/item/SQLite/375020?fr=aladdin" target="_blank" rel="noreferrer">https://baike.baidu.com/item/SQLite/375020?fr=aladdin</a></p><p>[2]<a href="https://www.liaoxuefeng.com/wiki/1016959663602400/1017801751919456" target="_blank" rel="noreferrer">https://www.liaoxuefeng.com/wiki/1016959663602400/1017801751919456</a></p>',70),l=[s];function n(d,o,p,h,g,c){return a(),e("div",null,l)}const v=t(r,[["render",n]]);export{E as __pageData,v as default};
